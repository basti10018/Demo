
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Basti Pogi
 */
public class RequestFrame extends javax.swing.JFrame {

    /**
     * Creates new form RequestFrame
     */
    DefaultTableModel request;
    DatabaseTransaction dt = new DatabaseTransaction();

    public RequestFrame() {
        initComponents();
        request = (DefaultTableModel) requestTable.getModel();
        statusList.setSelectedIndex(1);
        getReq();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        departmentList = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        approveB = new javax.swing.JButton();
        rejectB = new javax.swing.JButton();
        closeB = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        statusList = new javax.swing.JComboBox<>();
        refreshB = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Request");

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        requestTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        requestTable.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Particular", "Quantity", "Unit Price", "Unit Cost", "Department", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTable.setGridColor(new java.awt.Color(255, 255, 255));
        requestTable.setRowHeight(40);
        requestTable.setSelectionBackground(new java.awt.Color(255, 255, 204));
        requestTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        requestTable.getTableHeader().setReorderingAllowed(false);
        requestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(requestTable);

        departmentList.setBackground(new java.awt.Color(255, 255, 204));
        departmentList.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        departmentList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "HRM", "Chem lab", "Supplies", "Bookstore", "Electronics lab" }));
        departmentList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                departmentListItemStateChanged(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 204));
        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setText("Department");

        approveB.setBackground(new java.awt.Color(255, 255, 204));
        approveB.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        approveB.setText("Approve");
        approveB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                approveBActionPerformed(evt);
            }
        });

        rejectB.setBackground(new java.awt.Color(255, 255, 204));
        rejectB.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        rejectB.setText("Reject");
        rejectB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rejectBActionPerformed(evt);
            }
        });

        closeB.setBackground(new java.awt.Color(255, 255, 204));
        closeB.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        closeB.setText("Close");
        closeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 204));
        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Status:");

        statusList.setBackground(new java.awt.Color(255, 255, 204));
        statusList.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        statusList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "pending", "approved", "rejected" }));
        statusList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                statusListItemStateChanged(evt);
            }
        });

        refreshB.setBackground(new java.awt.Color(255, 255, 204));
        refreshB.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        refreshB.setText("Refresh");
        refreshB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 912, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(refreshB, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(statusList, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(departmentList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addComponent(approveB, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rejectB, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(closeB, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(departmentList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addComponent(statusList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(refreshB))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 394, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(approveB)
                    .addComponent(rejectB)
                    .addComponent(closeB))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void requestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestTableMouseClicked
        // TODO add your handling code here:
        getReq();

    }//GEN-LAST:event_requestTableMouseClicked

    private void departmentListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_departmentListItemStateChanged
        // TODO add your handling code here:
        getReq();


    }//GEN-LAST:event_departmentListItemStateChanged

    private void approveBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_approveBActionPerformed
        // TODO add your handling code here:
        try {
            int index = requestTable.getSelectedRow();
            int ans = JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING", JOptionPane.YES_NO_OPTION);
            if (ans == JOptionPane.YES_OPTION) {
                dt.updateRequest(dt.req_id.get(index), "Approved");
                getReq();
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select item!");
        }


    }//GEN-LAST:event_approveBActionPerformed

    private void rejectBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rejectBActionPerformed
        // TODO add your handling code here:
        try {
            int ans = JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING", JOptionPane.YES_NO_OPTION);
            if (ans == JOptionPane.YES_OPTION) {

                int index = requestTable.getSelectedRow();
                dt.updateRequest(dt.req_id.get(index), "Rejected");
                getReq();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select item!");
        }


    }//GEN-LAST:event_rejectBActionPerformed

    private void closeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_closeBActionPerformed

    private void statusListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_statusListItemStateChanged
        // TODO add your handling code here:
        getReq();
    }//GEN-LAST:event_statusListItemStateChanged

    private void refreshBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_refreshBActionPerformed

    public void getReq() {

        dt.getRequest(departmentList.getSelectedItem().toString(), statusList.getSelectedItem().toString());
        populateRequestTable();
    }

    void populateRequestTable() {
        int a = requestTable.getRowCount();

        while (a > 0) {
            request.removeRow(a - 1);
            a--;
        }

        for (int x = 0; x < dt.req_id.size(); x++) {
            request.insertRow(requestTable.getRowCount(),
                    new Object[]{dt.req_particular.get(x), dt.req_quantity.get(x), dt.req_price.get(x), dt.req_cost.get(x), dt.req_department.get(x), dt.req_status.get(x)});
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RequestFrame().setVisible(true);
            }
        });
    }

    void updateRequest() {
        int index = requestTable.getSelectedRow();
        dt.getUser(dt.user_id.get(index));
        dt.clearUserArray();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton approveB;
    private javax.swing.JButton closeB;
    private javax.swing.JComboBox<String> departmentList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton refreshB;
    private javax.swing.JButton rejectB;
    private javax.swing.JTable requestTable;
    private javax.swing.JComboBox<String> statusList;
    // End of variables declaration//GEN-END:variables
}
