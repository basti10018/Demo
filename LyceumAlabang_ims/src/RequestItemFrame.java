
import com.sun.xml.internal.ws.util.StringUtils;
import java.awt.event.KeyEvent;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Basti Pogi
 */
public class RequestItemFrame extends javax.swing.JFrame {

    /**
     * Creates new form RequestItemFrame
     */
    private String id;
    private String name;
    private String lastname;
    private String department;
    private String access;
    DefaultTableModel listTable;
    DefaultTableModel request;
    DatabaseTransaction dt = new DatabaseTransaction();
    DateTimeFormatter date = DateTimeFormatter.ofPattern("MM/dd/yyyy");
    DateTimeFormatter time = DateTimeFormatter.ofPattern(" hh:mm a");
    int temp = 100;

    public RequestItemFrame() {
        initComponents();
        request = (DefaultTableModel) requestTable.getModel();
        listTable = (DefaultTableModel) list.getModel();
        getStock(optionList.getSelectedItem().toString(), departmentList.getSelectedItem().toString());
        getReq();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addItemPanel = new javax.swing.JPanel();
        requestPanel = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        statusList = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        refreshRequest = new javax.swing.JButton();
        itemPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        list = new javax.swing.JTable();
        closeB = new javax.swing.JButton();
        searchTF = new javax.swing.JTextField();
        searchB = new javax.swing.JButton();
        refreshB = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        departmentList = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        optionList = new javax.swing.JComboBox<>();
        selectB = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        unitPriceTF = new javax.swing.JTextField();
        addRequestB = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        particularTF = new javax.swing.JTextField();
        quantityTF = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        costPriceTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Request Item");
        setResizable(false);

        addItemPanel.setBackground(new java.awt.Color(255, 255, 255));
        addItemPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        addItemPanel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addItemPanelKeyPressed(evt);
            }
        });

        requestPanel.setBackground(new java.awt.Color(255, 255, 255));
        requestPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Request", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        requestTable.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        requestTable.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Particular", "Quantity", "Unit Price", "Unit Cost", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTable.setGridColor(new java.awt.Color(255, 255, 255));
        requestTable.setRowHeight(40);
        requestTable.setSelectionBackground(new java.awt.Color(255, 255, 204));
        requestTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        requestTable.getTableHeader().setReorderingAllowed(false);
        requestTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                requestTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(requestTable);

        statusList.setBackground(new java.awt.Color(255, 255, 204));
        statusList.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        statusList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "pending", "approved", "rejected", "All", " " }));
        statusList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                statusListItemStateChanged(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 204));
        jLabel3.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel3.setText("Status:");

        refreshRequest.setBackground(new java.awt.Color(255, 255, 204));
        refreshRequest.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        refreshRequest.setText("Refresh");
        refreshRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshRequestActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout requestPanelLayout = new javax.swing.GroupLayout(requestPanel);
        requestPanel.setLayout(requestPanelLayout);
        requestPanelLayout.setHorizontalGroup(
            requestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(requestPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(requestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 916, Short.MAX_VALUE)
                    .addGroup(requestPanelLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(statusList, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(refreshRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        requestPanelLayout.setVerticalGroup(
            requestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, requestPanelLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(requestPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(statusList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refreshRequest))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        itemPanel.setBackground(new java.awt.Color(255, 255, 255));
        itemPanel.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Inventory", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N

        list.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        list.setFont(new java.awt.Font("Verdana", 0, 20)); // NOI18N
        list.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Particular", "Quantity", "Units", "Data Purchased", "Barcode", "Unit Price", "Cost Price", "Department", "Status/Remark"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        list.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        list.setGridColor(new java.awt.Color(255, 255, 255));
        list.setRowHeight(50);
        list.setSelectionBackground(new java.awt.Color(255, 255, 204));
        list.setSelectionForeground(new java.awt.Color(0, 0, 0));
        list.setShowHorizontalLines(false);
        list.setShowVerticalLines(false);
        list.getTableHeader().setReorderingAllowed(false);
        list.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                listMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(list);

        closeB.setBackground(new java.awt.Color(255, 255, 204));
        closeB.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        closeB.setText("Close");
        closeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBActionPerformed(evt);
            }
        });

        searchTF.setBackground(new java.awt.Color(255, 255, 204));
        searchTF.setText("Enter product name....");
        searchTF.setCaretPosition(0);
        searchTF.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                searchTFFocusLost(evt);
            }
        });
        searchTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchTFActionPerformed(evt);
            }
        });
        searchTF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchTFKeyPressed(evt);
            }
        });

        searchB.setBackground(new java.awt.Color(255, 255, 204));
        searchB.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        searchB.setText("Search");
        searchB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBActionPerformed(evt);
            }
        });

        refreshB.setBackground(new java.awt.Color(255, 255, 204));
        refreshB.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        refreshB.setText("Refresh");
        refreshB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshBActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setText("Department:");

        departmentList.setBackground(new java.awt.Color(255, 255, 204));
        departmentList.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        departmentList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "HRM", "Chem lab", "Supplies", "Bookstore", "Electronics lab" }));
        departmentList.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        departmentList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                departmentListItemStateChanged(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Remarks:");

        optionList.setBackground(new java.awt.Color(255, 255, 204));
        optionList.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        optionList.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Functional", "Missing", "Usable", "Borrowed", "Breakage ", "Defective", " " }));
        optionList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                optionListItemStateChanged(evt);
            }
        });

        selectB.setBackground(new java.awt.Color(255, 255, 204));
        selectB.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        selectB.setText("Select");
        selectB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout itemPanelLayout = new javax.swing.GroupLayout(itemPanel);
        itemPanel.setLayout(itemPanelLayout);
        itemPanelLayout.setHorizontalGroup(
            itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, itemPanelLayout.createSequentialGroup()
                        .addComponent(selectB, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1188, Short.MAX_VALUE)
                        .addComponent(closeB, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(itemPanelLayout.createSequentialGroup()
                        .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchB, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(refreshB, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(12, 12, 12)
                        .addComponent(departmentList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel5)
                        .addGap(12, 12, 12)
                        .addComponent(optionList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        itemPanelLayout.setVerticalGroup(
            itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(itemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchTF, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(searchB)
                        .addComponent(refreshB))
                    .addComponent(departmentList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(optionList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(itemPanelLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 20, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(itemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(closeB)
                    .addComponent(selectB))
                .addGap(7, 7, 7))
        );

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Add new request", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Times New Roman", 0, 18))); // NOI18N
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setText("Quantity:");

        unitPriceTF.setBackground(new java.awt.Color(255, 255, 204));
        unitPriceTF.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        unitPriceTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        unitPriceTF.setText("0");
        unitPriceTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unitPriceTFActionPerformed(evt);
            }
        });

        addRequestB.setBackground(new java.awt.Color(255, 255, 204));
        addRequestB.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        addRequestB.setText("Add Request");
        addRequestB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addRequestBActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Particular:");

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Cost Price:");

        particularTF.setBackground(new java.awt.Color(255, 255, 204));
        particularTF.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        particularTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                particularTFActionPerformed(evt);
            }
        });

        quantityTF.setBackground(new java.awt.Color(255, 255, 204));
        quantityTF.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        quantityTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        quantityTF.setText("1");
        quantityTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantityTFActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setText("Unit Price:");

        costPriceTF.setBackground(new java.awt.Color(255, 255, 204));
        costPriceTF.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        costPriceTF.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        costPriceTF.setText("0");
        costPriceTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                costPriceTFActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2))
                        .addGap(107, 107, 107)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(unitPriceTF, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                            .addComponent(particularTF)
                            .addComponent(costPriceTF)
                            .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(addRequestB)))
                .addContainerGap(80, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(particularTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 98, Short.MAX_VALUE)
                        .addComponent(addRequestB)
                        .addContainerGap())
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(unitPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(costPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout addItemPanelLayout = new javax.swing.GroupLayout(addItemPanel);
        addItemPanel.setLayout(addItemPanelLayout);
        addItemPanelLayout.setHorizontalGroup(
            addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(requestPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addComponent(itemPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        addItemPanelLayout.setVerticalGroup(
            addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addItemPanelLayout.createSequentialGroup()
                .addGroup(addItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addItemPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(requestPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(itemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addItemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(addItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addItemPanelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addItemPanelKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_addItemPanelKeyPressed

    private void listMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_listMouseClicked
        // TODO add your handling code here:
        int index = list.getSelectedRow();
        if (temp == index) {
            particularTF.setText(list.getValueAt(index, 0).toString());
            unitPriceTF.setText(list.getValueAt(index, 5).toString());
            costPriceTF.setText(list.getValueAt(index, 6).toString());
        }
        temp = index;


    }//GEN-LAST:event_listMouseClicked

    private void requestTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_requestTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_requestTableMouseClicked

    private void unitPriceTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unitPriceTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_unitPriceTFActionPerformed

    private void addRequestBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addRequestBActionPerformed
        // TODO add your handling code here:
        LocalDateTime now = LocalDateTime.now();
        int ans =  JOptionPane.showConfirmDialog(null, "Are you sure?", "WARNING",  JOptionPane.YES_NO_OPTION);
        if (ans == JOptionPane.YES_OPTION) {

            try {
                if (dt.addRequest(particularTF.getText(), quantityTF.getText(), unitPriceTF.getText(), costPriceTF.getText(), this.department)) {
                    JOptionPane.showMessageDialog(null, "Request succesfully sent");
                    String transaction = "added new request";
                    String name = StringUtils.capitalize(this.name) + " " + StringUtils.capitalize(this.lastname);
                    String data = StringUtils.capitalize(particularTF.getText());
                    dt.activityLogs(id, name, this.access, transaction, data, date.format(now), time.format(now), this.department);
                    getStock(optionList.getSelectedItem().toString(), departmentList.getSelectedItem().toString());
                    getReq();

                }

            } catch (Exception e) {
                e.printStackTrace();

            }
        }


    }//GEN-LAST:event_addRequestBActionPerformed

    private void particularTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_particularTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_particularTFActionPerformed

    private void quantityTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantityTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantityTFActionPerformed

    private void costPriceTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_costPriceTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_costPriceTFActionPerformed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void closeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_closeBActionPerformed

    private void searchTFFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_searchTFFocusLost
        // TODO add your handling code here:
        if (searchTF.getText().equals("Enter product name....") || searchTF.getText().isEmpty() || searchTF.getText().equals(" ")) {
            searchTF.setText("Enter product name....");

        }

    }//GEN-LAST:event_searchTFFocusLost

    private void searchTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchTFActionPerformed

    private void searchTFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTFKeyPressed
        // TODO add your handling code here
        if (searchTF.getText().equals("Enter product name....") || searchTF.getText().isEmpty()) {
            searchTF.setText("");

        }
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            searchB.doClick();
        }
    }//GEN-LAST:event_searchTFKeyPressed

    private void searchBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBActionPerformed
        // TODO add your handling code here:
        dt.clearProductArray();
        String search = searchTF.getText();
        if (search.equals("Enter product name....")) {
            dt.prod_id.removeAll(dt.prod_id);
            getStock(optionList.getSelectedItem().toString(), departmentList.getSelectedItem().toString());
            populateProductTable();
        } else {
            dt.prod_id.removeAll(dt.prod_id);
            dt.searchItem(search, optionList.getSelectedItem().toString(), departmentList.getSelectedItem().toString());
            populateProductTable();
        }

    }//GEN-LAST:event_searchBActionPerformed

    private void refreshBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshBActionPerformed
        // TODO add your handling code here:
        searchTF.setText("Enter product name....");
        optionList.setSelectedIndex(0);
        departmentList.setSelectedIndex(0);
        getStock(optionList.getSelectedItem().toString(), departmentList.getSelectedItem().toString());
    }//GEN-LAST:event_refreshBActionPerformed

    private void departmentListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_departmentListItemStateChanged
        // TODO add your handling code here:
        dt.prod_id.removeAll(dt.prod_id);
        getStock(optionList.getSelectedItem().toString(), departmentList.getSelectedItem().toString());
        searchTF.setText("Enter product name....");
    }//GEN-LAST:event_departmentListItemStateChanged

    private void optionListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_optionListItemStateChanged
        // TODO add your handling code here:
        dt.prod_id.removeAll(dt.prod_id);
        getStock(optionList.getSelectedItem().toString(), departmentList.getSelectedItem().toString());
        searchTF.setText("Enter product name....");
    }//GEN-LAST:event_optionListItemStateChanged

    private void selectBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectBActionPerformed
        // TODO add your handling code here:

        try {
            int index = list.getSelectedRow();
            particularTF.setText(list.getValueAt(index, 0).toString());
            unitPriceTF.setText(list.getValueAt(index, 5).toString());
            costPriceTF.setText(list.getValueAt(index, 6).toString());
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Please select item");
        }


    }//GEN-LAST:event_selectBActionPerformed

    private void statusListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_statusListItemStateChanged
        // TODO add your handling code here:
        getReq();
    }//GEN-LAST:event_statusListItemStateChanged

    private void refreshRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshRequestActionPerformed
        // TODO add your handling code here:
        getReq();
    }//GEN-LAST:event_refreshRequestActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RequestItemFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RequestItemFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RequestItemFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RequestItemFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RequestItemFrame().setVisible(true);
            }
        });
    }

    public void getStock(String remarks, String department) {

        dt.displayStock(remarks, department);
        getReq();
        populateProductTable();
    }

    void populateProductTable() {
        int a = listTable.getRowCount();

        while (a > 0) {
            listTable.removeRow(a - 1);
            a--;
        }

        for (int x = 0; x < dt.prod_description.size(); x++) {
            listTable.insertRow(listTable.getRowCount(),
                    new Object[]{dt.prod_description.get(x), dt.prod_quantity.get(x), dt.prod_units.get(x), dt.prod_date.get(x), dt.prod_barcode.get(x), dt.prod_price.get(x), dt.prod_cost.get(x), dt.prod_department.get(x), dt.prod_remarks.get(x)});
        }
        dt.clearProductArray();

    }

    public void getReq() {

        dt.getRequest(departmentList.getSelectedItem().toString(), statusList.getSelectedItem().toString());
        populateRequestTable();
    }

    void populateRequestTable() {
        int a = requestTable.getRowCount();

        while (a > 0) {
            request.removeRow(a - 1);
            a--;
        }

        for (int x = 0; x < dt.req_id.size(); x++) {
            request.insertRow(requestTable.getRowCount(),
                    new Object[]{dt.req_particular.get(x), dt.req_quantity.get(x), dt.req_price.get(x), dt.req_cost.get(x), dt.req_status.get(x)});
        }

    }

    void getUserId(String id) {
        this.id = id;
        dt.clearUserArray();
        dt.getUser(id);
        this.name = dt.user_name.get(0);
        this.lastname = dt.user_lastname.get(0);
        this.access = dt.user_access.get(0);
        this.department = dt.user_department.get(0);

    }

    void getDept(String department) {
        if (department.equals("HRM")) {
            departmentList.setSelectedIndex(1);

        } else if (department.equals("Chem lab")) {
            departmentList.setSelectedIndex(2);

        } else if (department.equals("Supplies")) {
            departmentList.setSelectedIndex(3);

        } else if (department.equals("Bookstore")) {
            departmentList.setSelectedIndex(4);

        } else if (department.equals("Electronics lab")) {
            departmentList.setSelectedIndex(5);

        }
        departmentList.setEnabled(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel addItemPanel;
    private javax.swing.JButton addRequestB;
    private javax.swing.JButton closeB;
    private javax.swing.JTextField costPriceTF;
    private javax.swing.JComboBox<String> departmentList;
    private javax.swing.JPanel itemPanel;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable list;
    private javax.swing.JComboBox<String> optionList;
    private javax.swing.JTextField particularTF;
    private javax.swing.JTextField quantityTF;
    private javax.swing.JButton refreshB;
    private javax.swing.JButton refreshRequest;
    private javax.swing.JPanel requestPanel;
    private javax.swing.JTable requestTable;
    private javax.swing.JButton searchB;
    private javax.swing.JTextField searchTF;
    private javax.swing.JButton selectB;
    private javax.swing.JComboBox<String> statusList;
    private javax.swing.JTextField unitPriceTF;
    // End of variables declaration//GEN-END:variables
}
