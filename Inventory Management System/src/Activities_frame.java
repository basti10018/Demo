
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.sql.*;
import java.util.logging.*;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
/*
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Basti
 */
public class Activities_frame extends javax.swing.JInternalFrame {

    
     private Connection con =null;
     private PreparedStatement ps = null;
     private ResultSet rs = null;
     public static String id="",empId="",prodId="",prodName="",transaction="",dateCreated="",fname="",lname="",fullname="";
     DefaultTableModel model;
     DisplayStockData s = new DisplayStockData();
    /**
     * Creates new form Activities_frame
     */
    public Activities_frame() {
        initComponents();
         con = MySqlConnect.ConnectDB();
         model =(DefaultTableModel) logsTable.getModel();
         getData();
         DateFormat timeFormat = new SimpleDateFormat("yyyy-MM-dd");
        
         ActionListener timerListener = new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
               
                Date date = new Date();
               
                dateCreated  =timeFormat.format(date);
                
            
            }
        };
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        activitiesPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        logsTable = new javax.swing.JTable();
        closeB = new javax.swing.JButton();

        setClosable(true);
        setTitle("Activity Logs");

        activitiesPanel.setBackground(new java.awt.Color(204, 204, 204));

        javax.swing.GroupLayout activitiesPanelLayout = new javax.swing.GroupLayout(activitiesPanel);
        activitiesPanel.setLayout(activitiesPanelLayout);
        activitiesPanelLayout.setHorizontalGroup(
            activitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        activitiesPanelLayout.setVerticalGroup(
            activitiesPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        logsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Employee Name", "Transaction_Type", "Product No", "Product Name", "Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(logsTable);

        closeB.setBackground(new java.awt.Color(255, 255, 153));
        closeB.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        closeB.setText("Close");
        closeB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeBActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 491, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(closeB)
                        .addGap(19, 19, 19)))
                .addComponent(activitiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(609, 609, 609))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(activitiesPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(closeB)
                .addContainerGap())
        );

        setBounds(300, 0, 508, 372);
    }// </editor-fold>//GEN-END:initComponents

    private void closeBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeBActionPerformed
        // TODO add your handling code here:
                    
                     setVisible(false);
        
    }//GEN-LAST:event_closeBActionPerformed
 public void getData() 
    {
        
         try {
             ps = con.prepareStatement("Select * from activity");
             
             rs =ps.executeQuery();
             
             while(rs.next())
             {
                 
                 id = rs.getString("id");
                 empId = rs.getString("emp_id");
                 prodId = rs.getString("prod_id");
                 dateCreated = rs.getString("date_created");
                 transaction = rs.getString("transaction_type");
                 s.displayEmpData(empId);
                 s.displayStockData(prodId);
                 prodName = s.name;
                 fullname = s.fullname;
                 
                 
                 model.insertRow( model.getRowCount(), new Object[]{empId,fullname,transaction,prodId,prodName,dateCreated});
             }
         } catch (SQLException ex) {
             Logger.getLogger(Account_frame.class.getName()).log(Level.SEVERE, null, ex);
         }
             
        
       
        finally
        {
                try 
                {
                    rs.close();
                    ps.close();
                    con.close();
                } catch (SQLException ex) 
                {
                   
                }
        }
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel activitiesPanel;
    private javax.swing.JButton closeB;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable logsTable;
    // End of variables declaration//GEN-END:variables
}
