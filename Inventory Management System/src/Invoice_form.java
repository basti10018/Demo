

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.InputMismatchException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Basti
 */
public class Invoice_form extends javax.swing.JInternalFrame {

   
     private Connection con =null;
     private PreparedStatement ps = null;
     private ResultSet rs = null;
     public static String no="",p_name="",price="",r_price="",qty="",newQuantity="",type="Invoice";
     double total=0,rPrice;
     int oldQty=0,newQty=0,p_quantity;
     int count =1;
     String date ="";
     DisplayStockData s = new   DisplayStockData();
     DefaultTableModel model;
     Order_frame f = new Order_frame();
     IMS_UserLogin login = new IMS_UserLogin();
    public Invoice_form() {
        initComponents();
         setTitle("Invoice");
         DisplayStockData s = new   DisplayStockData();
         SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd");
         date = d.format(new Date());
         con = MySqlConnect.ConnectDB();
         model =(DefaultTableModel) stockTable.getModel();
         getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        invoicePanel = new javax.swing.JPanel();
        productNoL = new javax.swing.JLabel();
        productNoTF = new javax.swing.JTextField();
        productNameL = new javax.swing.JLabel();
        productNameTF = new javax.swing.JTextField();
        quantityL = new javax.swing.JLabel();
        quantityTF = new javax.swing.JTextField();
        plusB = new javax.swing.JButton();
        minusB = new javax.swing.JButton();
        totalL = new javax.swing.JLabel();
        totalTF = new javax.swing.JTextField();
        cancelB = new javax.swing.JButton();
        saveB = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("jButton1");

        setClosable(true);
        setIconifiable(true);
        setResizable(true);

        invoicePanel.setBackground(new java.awt.Color(204, 204, 204));

        productNoL.setText("Product No.");

        productNoTF.setEditable(false);
        productNoTF.setBackground(new java.awt.Color(204, 204, 255));

        productNameL.setText("Product Name");

        productNameTF.setEditable(false);
        productNameTF.setBackground(new java.awt.Color(204, 204, 255));

        quantityL.setText("Quantity");

        quantityTF.setBackground(new java.awt.Color(255, 255, 153));
        quantityTF.setText("1");

        plusB.setBackground(new java.awt.Color(255, 255, 153));
        plusB.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        plusB.setText("+");
        plusB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusBActionPerformed(evt);
            }
        });

        minusB.setBackground(new java.awt.Color(255, 255, 153));
        minusB.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        minusB.setText("-");
        minusB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusBActionPerformed(evt);
            }
        });

        totalL.setText("Total Amount");

        totalTF.setEditable(false);
        totalTF.setBackground(new java.awt.Color(204, 204, 255));
        totalTF.setText("0.00");

        cancelB.setBackground(new java.awt.Color(255, 255, 153));
        cancelB.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        cancelB.setText("Cancel");
        cancelB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBActionPerformed(evt);
            }
        });

        saveB.setBackground(new java.awt.Color(255, 255, 153));
        saveB.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        saveB.setText("Save");
        saveB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBActionPerformed(evt);
            }
        });

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product No.", "Product Name", "Quantity", "Unit Price", "Retail Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(stockTable);

        javax.swing.GroupLayout invoicePanelLayout = new javax.swing.GroupLayout(invoicePanel);
        invoicePanel.setLayout(invoicePanelLayout);
        invoicePanelLayout.setHorizontalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(saveB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cancelB))
                    .addGroup(invoicePanelLayout.createSequentialGroup()
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productNameL)
                            .addComponent(productNoL))
                        .addGap(10, 10, 10)
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(productNoTF, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addComponent(productNameTF))
                        .addGap(103, 103, 103)
                        .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(invoicePanelLayout.createSequentialGroup()
                                .addComponent(totalL)
                                .addGap(18, 18, 18)
                                .addComponent(totalTF, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(invoicePanelLayout.createSequentialGroup()
                                .addComponent(quantityL)
                                .addGap(40, 40, 40)
                                .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(plusB)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(minusB)))
                        .addGap(0, 58, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, invoicePanelLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)))
        );
        invoicePanelLayout.setVerticalGroup(
            invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(invoicePanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productNoL)
                    .addComponent(productNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityL)
                    .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plusB)
                    .addComponent(minusB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(productNameL)
                        .addComponent(productNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(totalL)
                        .addComponent(totalTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 275, Short.MAX_VALUE)
                .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveB)
                    .addComponent(cancelB))
                .addGap(23, 23, 23))
            .addGroup(invoicePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(invoicePanelLayout.createSequentialGroup()
                    .addGap(107, 107, 107)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(70, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(invoicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(invoicePanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(300, 0, 655, 432);
    }// </editor-fold>//GEN-END:initComponents

    private void plusBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusBActionPerformed
        // TODO add your handling code here:
         count = Integer.parseInt(quantityTF.getText());
     
            count++;
            quantityTF.setText(""+count);
            count = Integer.parseInt(quantityTF.getText());
            
            
            rPrice = Double.parseDouble(s.rPrice);
            total = count * rPrice;
            
            totalTF.setText(""+total);
        
       
    }//GEN-LAST:event_plusBActionPerformed

    private void minusBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusBActionPerformed
        // TODO add your handling code here:
           count = Integer.parseInt(quantityTF.getText());
           if(count>0)
            count--;
           quantityTF.setText(""+count);
           count = Integer.parseInt(quantityTF.getText());
           rPrice = Double.parseDouble(s.rPrice);
           total = count * rPrice;
           totalTF.setText(""+total);
           
    }//GEN-LAST:event_minusBActionPerformed

    private void cancelBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBActionPerformed
                  // TODO add your handling code here:
                int a =JOptionPane.showConfirmDialog(null,"All unsaved data will be lost","INVENTORY MANAGEMENT SYSTEM",JOptionPane.YES_NO_OPTION);
                if(a ==0){
                    
                     setVisible(false);
                   }
                
              
    }//GEN-LAST:event_cancelBActionPerformed

    private void saveBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBActionPerformed
        // TODO add your handling code here:
        
        oldQty = Integer.parseInt(s.quantity);
        newQty = oldQty - count;
        newQuantity = ""+newQty;
        int ans = JOptionPane.showConfirmDialog(null, "Are you sure you want to save order transaction?\n Total amount:"+total,"Purchase Order",JOptionPane.YES_NO_OPTION);
               if(ans==0)
               { 
                   
                       try
                        {
                              s.alterProductQty(newQuantity, no);
                              s.insertLog(login.id,no,date,type);
                              JOptionPane.showMessageDialog(null, "Success!");
                              show(false);
                           }catch(Exception e){
                               
                              JOptionPane.showMessageDialog(null, "Error Saving!!");
                           }
                          
               }
    
    }//GEN-LAST:event_saveBActionPerformed

    private void stockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockTableMouseClicked
        // TODO add your handling code here:
  
        int index =  stockTable.getSelectedRow();
        no = model.getValueAt(index, 0).toString();

        s.displayStockData(no);
        productNoTF.setText(no);
        productNameTF.setText(s.name);
        count = Integer.parseInt(quantityTF.getText());
        rPrice = Double.parseDouble(s.rPrice);
        total = count * rPrice;
        totalTF.setText(""+total);
    }//GEN-LAST:event_stockTableMouseClicked

 public void getData()
   {
         
        try
        {    
    
             ps = con.prepareStatement("Select * from product");
             
             rs =ps.executeQuery();
             
             while(rs.next())
             {
                 
                no = rs.getString("id");
                qty = rs.getString("quantity");
                p_name = rs.getString("name");
                price = rs.getString("unit_price");
                r_price = rs.getString("retail_price");
                model.insertRow( model.getRowCount(), new Object[]{no,p_name,qty,price,r_price});
             }
             
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(null, "Error Loading database!");
        }
        finally
        {
                try 
                {
                    rs.close();
                    ps.close();
                    con.close();
                } catch (SQLException ex) 
                {
                    
                    Logger.getLogger(Inbox_frame.class.getName()).log(Level.SEVERE, null, ex);
                    
                }
        }
   }
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelB;
    private javax.swing.JPanel invoicePanel;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton minusB;
    private javax.swing.JButton plusB;
    private javax.swing.JLabel productNameL;
    private javax.swing.JTextField productNameTF;
    private javax.swing.JLabel productNoL;
    private javax.swing.JTextField productNoTF;
    private javax.swing.JLabel quantityL;
    private javax.swing.JTextField quantityTF;
    private javax.swing.JButton saveB;
    private javax.swing.JTable stockTable;
    private javax.swing.JLabel totalL;
    private javax.swing.JTextField totalTF;
    // End of variables declaration//GEN-END:variables
}

