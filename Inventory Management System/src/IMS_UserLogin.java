
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.Timer;
import java.sql.*;
import java.util.logging.*;
/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Basti
 */
public class IMS_UserLogin extends javax.swing.JFrame implements ItemListener {
    
    
     public static String d,t,user,pass,access,name,lname,id;
     private Connection con =null;
     private PreparedStatement ps = null;
    
     private ResultSet rs = null;
    /**
     * Creates new form IMS_UserLogin
     */
  
    public IMS_UserLogin() 
    {
        initComponents();
          showRB.addItemListener(this);
          con = MySqlConnect.ConnectDB();
           setTitle("Inventory Management System");
     
       
         DateFormat timeFormat = new SimpleDateFormat("hh:mm:ss a");
         DateFormat fullDf = DateFormat.getDateInstance(DateFormat.FULL);
         ActionListener timerListener = new ActionListener()
        {
            public void actionPerformed(ActionEvent e)
            {
               
                Date date = new Date();
                d  = fullDf.format(new Date());
                 t =timeFormat.format(date);
                timeL.setText(t);
                dateL.setText(d);
            }
        };
        Timer timer = new Timer(1000, timerListener);
        // to make sure it doesn't wait one second at the start
        timer.setInitialDelay(0);
        timer.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        checkbox1 = new java.awt.Checkbox();
        loginPanel = new javax.swing.JPanel();
        loginB = new javax.swing.JButton();
        passwordPF = new javax.swing.JPasswordField();
        usernameTF = new javax.swing.JTextField();
        usernameL = new javax.swing.JLabel();
        passwordL = new javax.swing.JLabel();
        signB = new javax.swing.JButton();
        logoL = new javax.swing.JLabel();
        timeL = new javax.swing.JLabel();
        dateL = new javax.swing.JLabel();
        showRB = new javax.swing.JRadioButton();
        headerPanel = new javax.swing.JPanel();
        titleL = new javax.swing.JLabel();

        checkbox1.setLabel("checkbox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        loginPanel.setBackground(new java.awt.Color(153, 153, 153));

        loginB.setBackground(new java.awt.Color(255, 255, 153));
        loginB.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        loginB.setText("Login");
        loginB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginBActionPerformed(evt);
            }
        });

        passwordPF.setBackground(new java.awt.Color(255, 255, 153));

        usernameTF.setBackground(new java.awt.Color(255, 255, 153));

        usernameL.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        usernameL.setText("Username");

        passwordL.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        passwordL.setText("Password");

        signB.setBackground(new java.awt.Color(255, 255, 153));
        signB.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        signB.setText("Sign up");
        signB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signBActionPerformed(evt);
            }
        });

        logoL.setIcon(new javax.swing.ImageIcon(getClass().getResource("/businessCard.png"))); // NOI18N

        timeL.setText("07:35:12 pm");

        dateL.setText("thursday, febuary 7, 2018");

        showRB.setText("show password");

        javax.swing.GroupLayout loginPanelLayout = new javax.swing.GroupLayout(loginPanel);
        loginPanel.setLayout(loginPanelLayout);
        loginPanelLayout.setHorizontalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(loginB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(signB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addComponent(dateL))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(passwordL, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(passwordPF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameL, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(usernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(logoL, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                        .addComponent(showRB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(timeL)))
                .addContainerGap())
        );
        loginPanelLayout.setVerticalGroup(
            loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(logoL, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(timeL))
                    .addGroup(loginPanelLayout.createSequentialGroup()
                        .addComponent(usernameL, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(usernameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(passwordL, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(passwordPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(showRB)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(loginB)
                    .addComponent(signB)
                    .addComponent(dateL))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        titleL.setBackground(new java.awt.Color(51, 51, 255));
        titleL.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        titleL.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleL.setText("INVENTORY MANAGEMENT SYSTEM");

        javax.swing.GroupLayout headerPanelLayout = new javax.swing.GroupLayout(headerPanel);
        headerPanel.setLayout(headerPanelLayout);
        headerPanelLayout.setHorizontalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(titleL, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE))
        );
        headerPanelLayout.setVerticalGroup(
            headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 54, Short.MAX_VALUE)
            .addGroup(headerPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(titleL, javax.swing.GroupLayout.DEFAULT_SIZE, 54, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(loginPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(headerPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(headerPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginBActionPerformed
              // TODO add your handling code here:
            user =usernameTF.getText();
            pass=passwordPF.getText();
           
    
       if(user.length()>0&&pass.length()>0)
       {
          
           try{
               
             ps = con.prepareStatement("Select * From employee where BINARY username =? and BINARY password =?");
             ps.setString(1,user);
             ps.setString(2,pass);
             rs =ps.executeQuery();
            
              if(rs.next())
             {
              
                  access = rs.getString("access");
                  name = rs.getString("FirstName");
                  lname = rs.getString("LastName");
                  id = rs.getString("ID");
                  JOptionPane.showMessageDialog(null, "Welcome "+name+" "+lname);
                  show(false);
               
                  if(access.equals("user"))
                     new IMS_UserForm().show();
                  else if(access.equals("admin"))
                     new IMS_SuperUser().show();
                  else 
                    JOptionPane.showMessageDialog(null, "Account not active! please contact administrator");
           
              }
              
            else
            {
                 
                 JOptionPane.showMessageDialog(null, "User not found!!");
                 passwordPF.setText("");
                 
            }
             ps.close();
             
        }
           catch (SQLException ex) 
        {
            Logger.getLogger(IMS_UserLogin.class.getName()).log(Level.SEVERE, null, ex);
            
        }
           
      }
      else
          JOptionPane.showMessageDialog(null, "Please fill up all the missing fields");
    }//GEN-LAST:event_loginBActionPerformed

    private void signBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signBActionPerformed

        // TODO add your handling code here:
        IMS_SignUp run = new IMS_SignUp();
        run.setVisible(true);
    }//GEN-LAST:event_signBActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(IMS_UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(IMS_UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(IMS_UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(IMS_UserLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new IMS_UserLogin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Checkbox checkbox1;
    private javax.swing.JLabel dateL;
    private javax.swing.JPanel headerPanel;
    private javax.swing.JButton loginB;
    private javax.swing.JPanel loginPanel;
    private javax.swing.JLabel logoL;
    private javax.swing.JLabel passwordL;
    private javax.swing.JPasswordField passwordPF;
    private javax.swing.JRadioButton showRB;
    private javax.swing.JButton signB;
    private javax.swing.JLabel timeL;
    private javax.swing.JLabel titleL;
    private javax.swing.JLabel usernameL;
    private javax.swing.JTextField usernameTF;
    // End of variables declaration//GEN-END:variables

    @Override
    public void itemStateChanged(ItemEvent e) {
         if(showRB.isSelected()==true)
             passwordPF.setEchoChar((char)0);
         else
             passwordPF.setEchoChar('*');
    }
}
