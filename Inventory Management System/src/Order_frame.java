

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;

import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Basti
 */
public class Order_frame extends javax.swing.JInternalFrame {

    /**
     * Creates new form Order_frame
     */
    private Connection con =null;
    private PreparedStatement ps = null;
    private ResultSet rs = null;
    double cnt,price,total;
    DefaultTableModel model;
    public static String no,date,qty,totalAmount, type ="order";;
    IMS_UserLogin login = new IMS_UserLogin();
    int oldQty=0,newQty=0,p_quantity;
    int count =1;
     DisplayStockData s = new   DisplayStockData();
    public Order_frame() {
        initComponents();
        setTitle("Purchase Order");
       
        SimpleDateFormat d = new SimpleDateFormat("yyyy-MM-dd");
        date = d.format(new Date());

        con = MySqlConnect.ConnectDB();
        model =(DefaultTableModel) stockTable.getModel();
        getData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel3 = new javax.swing.JLabel();
        orderPanel = new javax.swing.JPanel();
        productNoL = new javax.swing.JLabel();
        productNoTF = new javax.swing.JTextField();
        quantityL = new javax.swing.JLabel();
        quantityTF = new javax.swing.JTextField();
        plusB = new javax.swing.JButton();
        minusB = new javax.swing.JButton();
        orderB = new javax.swing.JButton();
        cancelB = new javax.swing.JButton();
        productNameL = new javax.swing.JLabel();
        productNameTF = new javax.swing.JTextField();
        vendorL = new javax.swing.JLabel();
        vendorTF = new javax.swing.JTextField();
        unitPriceL = new javax.swing.JLabel();
        retailPriceL = new javax.swing.JLabel();
        unitPriceTF = new javax.swing.JTextField();
        retailPriceTF = new javax.swing.JTextField();
        totalL = new javax.swing.JLabel();
        totalTF = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        stockTable = new javax.swing.JTable();

        jLabel3.setText("jLabel3");

        setClosable(true);
        setIconifiable(true);

        orderPanel.setBackground(new java.awt.Color(204, 204, 204));

        productNoL.setText("Product No.");

        productNoTF.setEditable(false);
        productNoTF.setBackground(new java.awt.Color(204, 204, 255));

        quantityL.setText("Quantity");

        quantityTF.setBackground(new java.awt.Color(255, 255, 153));
        quantityTF.setText("1");

        plusB.setBackground(new java.awt.Color(255, 255, 153));
        plusB.setText("+");
        plusB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plusBActionPerformed(evt);
            }
        });

        minusB.setBackground(new java.awt.Color(255, 255, 153));
        minusB.setText("-");
        minusB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                minusBActionPerformed(evt);
            }
        });

        orderB.setBackground(new java.awt.Color(255, 255, 153));
        orderB.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        orderB.setText("Add");
        orderB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderBActionPerformed(evt);
            }
        });

        cancelB.setBackground(new java.awt.Color(255, 255, 153));
        cancelB.setFont(new java.awt.Font("Arial Black", 0, 11)); // NOI18N
        cancelB.setText("Cancel");
        cancelB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelBActionPerformed(evt);
            }
        });

        productNameL.setText("Product Name");

        productNameTF.setEditable(false);
        productNameTF.setBackground(new java.awt.Color(204, 204, 255));

        vendorL.setText("Vendor");

        vendorTF.setEditable(false);
        vendorTF.setBackground(new java.awt.Color(204, 204, 255));
        vendorTF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vendorTFActionPerformed(evt);
            }
        });

        unitPriceL.setText("Unit Price");

        retailPriceL.setText("Retail Price");

        unitPriceTF.setEditable(false);
        unitPriceTF.setBackground(new java.awt.Color(204, 204, 255));
        unitPriceTF.setText("0.00");

        retailPriceTF.setEditable(false);
        retailPriceTF.setBackground(new java.awt.Color(204, 204, 255));
        retailPriceTF.setText("0.00");

        totalL.setText("Total order amount");

        totalTF.setEditable(false);
        totalTF.setBackground(new java.awt.Color(204, 204, 255));
        totalTF.setText("0.00");

        stockTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product No.", "Product Name", "Quantity", "Unit Price", "Retail Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        stockTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                stockTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(stockTable);

        javax.swing.GroupLayout orderPanelLayout = new javax.swing.GroupLayout(orderPanel);
        orderPanel.setLayout(orderPanelLayout);
        orderPanelLayout.setHorizontalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderPanelLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(orderPanelLayout.createSequentialGroup()
                        .addComponent(totalL)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totalTF, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(orderPanelLayout.createSequentialGroup()
                        .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(productNameL)
                            .addComponent(vendorL)
                            .addComponent(productNoL))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(productNoTF, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                            .addComponent(productNameTF)
                            .addComponent(vendorTF))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 193, Short.MAX_VALUE)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(retailPriceL)
                    .addComponent(unitPriceL)
                    .addComponent(quantityL))
                .addGap(28, 28, 28)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(retailPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(orderPanelLayout.createSequentialGroup()
                        .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(plusB)
                        .addGap(18, 18, 18)
                        .addComponent(minusB)))
                .addGap(154, 154, 154))
            .addGroup(orderPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(orderB)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cancelB)
                .addContainerGap(686, Short.MAX_VALUE))
            .addComponent(jScrollPane2)
        );
        orderPanelLayout.setVerticalGroup(
            orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productNoL)
                    .addComponent(productNoTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(quantityL)
                    .addComponent(quantityTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(plusB)
                    .addComponent(minusB))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productNameL)
                    .addComponent(productNameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(unitPriceL)
                    .addComponent(unitPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vendorL)
                    .addComponent(vendorTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(retailPriceL)
                    .addComponent(retailPriceTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalL)
                    .addComponent(totalTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(orderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderB)
                    .addComponent(cancelB))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 171, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(orderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(orderPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setBounds(300, 0, 854, 465);
    }// </editor-fold>//GEN-END:initComponents

    private void vendorTFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vendorTFActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_vendorTFActionPerformed

    private void orderBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderBActionPerformed
     
        int ctr = productNameTF.getText().length();
        if(ctr>0)
        {
        
          cnt = Double.parseDouble(quantityTF.getText());
          count = Integer.parseInt(quantityTF.getText());
          price =Double.parseDouble(unitPriceTF.getText());
          total = cnt * price;
          totalTF.setText(""+total);   
          
          int ans = JOptionPane.showConfirmDialog(null, "Are you sure you want to save order transaction?\n Total amount: Php"+total,"Purchase Order",JOptionPane.YES_NO_OPTION);
               if(ans==0)
               { 
                          
                       
                          qty = quantityTF.getText();
                          String sa = productNoTF.getText();
                          s.insertOrder(sa);
                          
                          
                           oldQty = Integer.parseInt(s.quantity);
                           newQty = oldQty + count;
                           String newQuantity = ""+newQty;
                           
                           try
                           {  
                              s.alterProductQty(newQuantity, sa);
                              s.insertLog(login.id,no,date,type);
                              
                              
                              JOptionPane.showMessageDialog(null, "Success!");
                              show(false);
                           }catch(Exception e){
                               
                              JOptionPane.showMessageDialog(null, "Error Saving!!");
                           }
                          
                          
               }
                      
        }
        else
            JOptionPane.showMessageDialog(null, "Please Select Product");
    }//GEN-LAST:event_orderBActionPerformed

    private void cancelBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelBActionPerformed
        // TODO add your handling code here:
         int a =JOptionPane.showConfirmDialog(null,"All unsaved data will be lost","INVENTORY MANAGEMENT SYSTEM",JOptionPane.YES_NO_OPTION);

                if(a ==0){
                    
                     setVisible(false);
                   }
                
              
    }//GEN-LAST:event_cancelBActionPerformed

    private void plusBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plusBActionPerformed
        // TODO add your handling code here:
         int count = Integer.parseInt(quantityTF.getText());
        try{
          count++;
          quantityTF.setText(""+count);
          cnt = Double.parseDouble(quantityTF.getText());
          count = Integer.parseInt(quantityTF.getText());
          price =Double.parseDouble(unitPriceTF.getText());
          total = cnt * price;
          totalTF.setText(""+total); 
          totalAmount = totalTF.getText();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"SYSTEM ERROR! /n Numbers Only ");
        }
    }//GEN-LAST:event_plusBActionPerformed

    private void minusBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_minusBActionPerformed
        // TODO add your handling code here:
         int count = Integer.parseInt(quantityTF.getText());
        
         try{
              if(count>0)
                 count--;
              
               quantityTF.setText(""+count);
               cnt = Double.parseDouble(quantityTF.getText());
               price =Double.parseDouble(unitPriceTF.getText());
               total = cnt * price;
               totalTF.setText(""+total);   
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,"SYSTEM ERROR! /n Numbers Only ");
        }
    }//GEN-LAST:event_minusBActionPerformed

    private void stockTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_stockTableMouseClicked
        // TODO add your handling code here:
        DisplayStockData s = new   DisplayStockData();
          int index =  stockTable.getSelectedRow();
          no = model.getValueAt(index, 0).toString();
     
          s.displayStockData(no);
          productNoTF.setText(no);
          productNameTF.setText(s.name);
          vendorTF.setText(s.vname);
          unitPriceTF.setText(s.price);
          retailPriceTF.setText(s.rPrice);
          cnt = Double.parseDouble(quantityTF.getText());
          price =Double.parseDouble(retailPriceTF.getText());
          total = cnt * price;
          totalTF.setText(""+total);   
        
    

    }//GEN-LAST:event_stockTableMouseClicked
 public void getData()
   {
         
        try
        {    
    
             ps = con.prepareStatement("Select * from product");
             
             rs =ps.executeQuery();
             
             while(rs.next())
             {
                
                no = rs.getString("id");
                String quantity = rs.getString("quantity");
                String p_name = rs.getString("name");
                String price = rs.getString("unit_price");
                String r_price = rs.getString("retail_price");
               
                
             
                 model.insertRow( model.getRowCount(), new Object[]{no,p_name,quantity,price,r_price});
             }
             
        }
        catch(Exception e)
        {
             JOptionPane.showMessageDialog(null, "Error Loading database!");
        }
        finally
        {
                try 
                {
                    rs.close();
                    ps.close();
                    con.close();
                } catch (SQLException ex) 
                {
                    Logger.getLogger(Inbox_frame.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
   }
        

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelB;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton minusB;
    private javax.swing.JButton orderB;
    private javax.swing.JPanel orderPanel;
    private javax.swing.JButton plusB;
    private javax.swing.JLabel productNameL;
    private javax.swing.JTextField productNameTF;
    private javax.swing.JLabel productNoL;
    private javax.swing.JTextField productNoTF;
    private javax.swing.JLabel quantityL;
    private javax.swing.JTextField quantityTF;
    private javax.swing.JLabel retailPriceL;
    private javax.swing.JTextField retailPriceTF;
    private javax.swing.JTable stockTable;
    private javax.swing.JLabel totalL;
    private javax.swing.JTextField totalTF;
    private javax.swing.JLabel unitPriceL;
    private javax.swing.JTextField unitPriceTF;
    private javax.swing.JLabel vendorL;
    private javax.swing.JTextField vendorTF;
    // End of variables declaration//GEN-END:variables


}
